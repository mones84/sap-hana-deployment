---

- name: Unpack SAPCAR archive (backwards compatibility)
  block:
  - name: Use SAPCAR to extract the SAP HANA Bundle SAR file
    command: >-
      {{ sap_hana_deployment_sapcar_path }}/{{ sap_hana_deployment_sapcar_file_name }} \
      -xvf {{ sap_hana_deployment_bundle_path }}/{{ sap_hana_deployment_bundle_sar_file_name }} \
      -manifest SIGNATURE.SMF
    register: extractbundle
    args:
      chdir: "{{ sap_hana_deployment_sapcar_path }}"
    changed_when: "'SAPCAR: processing archive' in extractbundle.stdout"

  - name: Setting fact for HANA installer path
    set_fact:
      sap_hana_installdir: "{{ sap_hana_deployment_sapcar_path }}/SAP_HANA_DATABASE"
  when:
    - not(( sap_hana_deployment_bundle_path is none ) or ( sap_hana_deployment_bundle_path | trim == ''))
    - not(( sap_hana_deployment_bundle_sar_file_name is none ) or (sap_hana_deployment_bundle_sar_file_name | trim == ''))

- name: Check availability of "{{ sap_hana_installdir + '/hdblcm' }}"
  stat:
    path: "{{ sap_hana_installdir + '/hdblcm' }}"
  register: sap_hana_deployment_register_hdblcm_stat
  failed_when: not sap_hana_deployment_register_hdblcm_stat.stat.exists
  
- name: create temporary directory to store the processed template
  tempfile:
    state: directory
    suffix: hanaconfig
  register: tmpdir

- name: "Process HANA Configfile Template"
  template:
    src: "{{ role_path }}/templates/configfile.j2"
    dest: "{{ tmpdir.path }}/configfile.cfg"
  register: cftemplate

- name: Install SAP HANA
  command: "./hdblcm --configfile={{ tmpdir.path }}/configfile.cfg -b"
  register: installhana
  args:
    chdir: "{{ sap_hana_installdir }}"
  changed_when: "'SAP HANA Lifecycle Management' in installhana.stdout"
